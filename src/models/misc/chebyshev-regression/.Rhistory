require(chebpol)
f <- function(x) cos(3*pi*x)/(1+25*(x-0.25)^2) # funtion to approximate
# Make a standard Chebyshev interpolation
y <- evalongrid(f,50) # f evaluation on 50 knots (Chebyshev grid)
coef <- chebcoef(y) # Chebyshev coefs
tch <- Vectorize(function(x) chebeval(x,coef)) # Given Chebyshev coefficients,
x <- chebknots(50)[[1]] # using 50 knots for clarity in the process
plot(x,f(x), type = 'l')
lines(x,tch(x),col='blue')
?chebcoef
f <- function(x) x^2 # funtion to approximate
y <- evalongrid(f,1) # f evaluation on 50 knots (Chebyshev grid)
y
y <- evalongrid(f,2) # f evaluation on 50 knots (Chebyshev grid)
y
y <- evalongrid(f,4) # f evaluation on 50 knots (Chebyshev grid)
y
coef <- chebcoef(y) # Chebyshev coefs
coef
y <- evalongrid(f,10) # f evaluation on 50 knots (Chebyshev grid)
coef <- chebcoef(y) # Chebyshev coefs
x <- chebknots(10)[[1]] # using 50 knots for clarity in the process
x
plot(x,f(x), type = 'l')
lines(x,tch(x),col='blue')
?chebeval
y
?evalongrid
f <- function(x) {a <- sum(x^2); ifelse(a == 0,0,exp(-1/a))}
## Standard Chebyshev grid
evalongrid(f,dims=c(3,5))
f <- function(x) {a <- sum(x^2); ifelse(a == 0,0,exp(-1/a))}
## Standard Chebyshev grid
evalongrid(f,3)
chebknots(4)
chebknots(c(x=3,y=4,z=3))
x <- chebknots(1)[[1]] # using 50 knots for clarity in the process
x
x <- chebknots(2)[[1]] # using 50 knots for clarity in the process
x
chebknots(2)[[1]] # using 50 knots for clarity in the process
?boot
require(MASS)
?boot
require(boot)
?boot
require(chebpol)
f <- function(x) cos(3*pi*x)/(1+25*(x-0.25)^2) # funtion to approximate
f <- function(x) x^2 # funtion to approximate
y <- evalongrid(f,10) # f evaluation on 50 knots (Chebyshev grid)
coef <- chebcoef(y) # Chebyshev coefs
tch <- Vectorize(function(x) chebeval(x,coef)) # Given Chebyshev coefficients,
x <- chebknots(2)[[1]] # using 50 knots for clarity in the process
chebknots(2)[[1]] # using 50 knots for clarity in the process
plot(x,f(x), type = 'l')
lines(x,tch(x),col='blue')
plot(x,f(x), type = 'l')
x
x <- chebknots(50)[[1]] # using 50 knots for clarity in the process
plot(x,f(x), type = 'l')
plot(x,f(x), type = 'p')
lines(x,tch(x),col='blue')
x <- chebknots(10)[[1]] # using 50 knots for clarity in the process
plot(x,f(x), type = 'p')
lines(x,tch(x),col='blue')
N <- length(x)
dump(c("N","x","y"),"chebyshev.data.R")
coef
?evalongrid
coef
y <- evalongrid(f,5) # f evaluation on 50 knots (Chebyshev grid)
coef <- chebcoef(y) # Chebyshev coefs
coef
y <- evalongrid(f,3) # f evaluation on 50 knots (Chebyshev grid)
coef <- chebcoef(y) # Chebyshev coefs
coef
x <- chebknots(3)[[1]] # using 50 knots for clarity in the process
x
f(x)
y
.5Â²
.5^2
2/5*.5^2
2/5*. 0.8660254^2
2/5*0.8660254^2
0.8660254^2
y <- evalongrid(f,3) # f evaluation on 50 knots (Chebyshev grid)
coef <- chebcoef(y) # Chebyshev coefs
tch <- Vectorize(function(x) chebeval(x,coef)) # Given Chebyshev coefficients,
x <- chebknots(3)[[1]] # using 50 knots for clarity in the process
plot(x,f(x), type = 'p')
lines(x,tch(x),col='blue')
K <- N <- length(x)
dump(c("N", "K","x","y"),"chebyshev.data.R")
K
N
dump(c("N", "K","x","y"),"chebyshev.data.R")
dump(c("N", "K","x","y"),"chebyshev.dataset.R")
